<!DOCTYPE html>
<html lang="zh-Hant">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>欠錢遊戲</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        input, select, button {
            margin: 5px 0;
            padding: 5px;
        }
        .record {
            margin-top: 20px;
            border-top: 1px solid #ccc;
            padding-top: 10px;
        }
        .record-item {
            display: flex;
            align-items: center;
            margin-bottom: 5px;
        }
        .record-item span {
            flex: 1;
        }
        .record-item button {
            margin-left: 10px;
        }
        .buttons {
            margin-top: 10px;
        }
        .summary {
            margin-top: 20px;
            border-top: 1px solid #ccc;
            padding-top: 10px;
        }
        .hidden {
            display: none;
        }
    </style>
</head>
<body>
    <h2>欠錢遊戲</h2>
    <div>
        <label for="newUser">新增使用者名稱：</label>
        <input type="text" id="newUser" placeholder="輸入新增使用者名稱">
        <button onclick="addUser()">新增使用者</button>
    </div>
    <div>
        <label for="username">使用者名稱：</label>
        <select id="username">
            <option value="">選擇使用者名稱</option>
        </select>
    </div>
    <div>
        <label for="type">選擇欠、還或先付：</label>
        <select id="type">
            <option value="欠">欠</option>
            <option value="還">還</option>
        </select>
    </div>
    <div id="targetUserDiv">
        <label for="targetUser">對象使用者名稱：</label>
        <select id="targetUser">
            <option value="">選擇對象使用者名稱</option>
        </select>
    </div>
    <div>
        <label for="amount">金額：</label>
        <input type="number" id="amount" placeholder="輸入金額">
    </div>
    <div>
        <label for="note">備註：</label>
        <select id="noteSelect">
            <option value="">選擇備註</option>
        </select>
        <input type="text" id="noteInput" placeholder="輸入備註">
        <button onclick="addNote()">新增備註</button>
    </div>
    <button onclick="addRecord()">確認</button>

    <div class="buttons">
        <button onclick="clearAllRecords()">清除所有資料</button>
    </div>

    <div id="records" class="record"></div>

    <div class="summary">
        <h3>總額</h3>
        <div id="summaryDetails"></div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            loadRecords();
            loadNotes();
            loadUsers();
        });

        document.getElementById('type').addEventListener('change', function() {
            const type = document.getElementById('type').value;
            const targetUserDiv = document.getElementById('targetUserDiv');
            if (type === '先付') {
                targetUserDiv.classList.add('hidden');
            } else {
                targetUserDiv.classList.remove('hidden');
            }
        });

        function addUser() {
            const newUser = document.getElementById('newUser').value;
            if (newUser) {
                let users = JSON.parse(localStorage.getItem('users')) || [];
                if (!users.includes(newUser)) {
                    users.push(newUser);
                    localStorage.setItem('users', JSON.stringify(users));
                    updateUserSelect(users);
                    updateTargetUserSelect(users);
                } else {
                    alert('使用者名稱已存在');
                }
                document.getElementById('newUser').value = '';
            }
        }

        function addNote() {
            const noteInput = document.getElementById('noteInput').value;
            if (noteInput) {
                let notes = JSON.parse(localStorage.getItem('notes')) || [];
                if (!notes.includes(noteInput)) {
                    notes.push(noteInput);
                    localStorage.setItem('notes', JSON.stringify(notes));
                    updateNoteSelect(notes);
                } else {
                    alert('備註已存在');
                }
                document.getElementById('noteInput').value = '';
            }
        }

        function addRecord() {
            const username = document.getElementById('username').value;
            const type = document.getElementById('type').value;
            const targetUser = document.getElementById('targetUser').value;
            const amount = document.getElementById('amount').value;
            const note = document.getElementById('noteSelect').value || document.getElementById('noteInput').value;

            if (!username || !amount || (type !== '先付' && !targetUser)) {
                alert("請填寫所有必填欄位");
                return;
            }

            const record = {
                id: Date.now(),
                username: username,
                type: type,
                targetUser: type === '先付' ? '' : targetUser,
                amount: parseFloat(amount),
                note: note
            };

            saveRecord(record);
            displayRecord(record);
            updateSummary();
            clearInputs();
        }

        function saveRecord(record) {
            let records = JSON.parse(localStorage.getItem('records')) || [];
            records.push(record);
            localStorage.setItem('records', JSON.stringify(records));
        }

        function loadRecords() {
            const records = JSON.parse(localStorage.getItem('records')) || [];
            records.forEach(record => displayRecord(record));
            updateSummary();
        }

        function displayRecord(record) {
            const recordsDiv = document.getElementById('records');
            const recordDiv = document.createElement('div');
            recordDiv.classList.add('record-item');
            recordDiv.dataset.id = record.id;

            const recordText = document.createElement('span');
            recordText.textContent = `${record.username} ${record.type} ${record.targetUser || ''} ${record.amount}元 備註: ${record.note}`;

            const deleteButton = document.createElement('button');
            deleteButton.textContent = '刪除';
            deleteButton.onclick = function() {
                deleteRecord(record.id);
            };

            recordDiv.appendChild(recordText);
            recordDiv.appendChild(deleteButton);
            recordsDiv.appendChild(recordDiv);
        }

        function clearInputs() {
            document.getElementById('username').value = '';
            document.getElementById('targetUser').value = '';
            document.getElementById('amount').value = '';
            document.getElementById('noteInput').value = '';
            document.getElementById('noteSelect').value = '';
        }

        function clearAllRecords() {
            if (confirm("確定要清除所有資料嗎？")) {
                localStorage.removeItem('records');
                localStorage.removeItem('users');
                localStorage.removeItem('notes');
                document.getElementById('records').innerHTML = '';
                document.getElementById('summaryDetails').innerHTML = '';
                updateUserSelect([]);
                updateTargetUserSelect([]);
                updateNoteSelect([]);
            }
        }

        function deleteRecord(id) {
            let records = JSON.parse(localStorage.getItem('records')) || [];
            records = records.filter(record => record.id !== id);
            localStorage.setItem('records', JSON.stringify(records));

            const recordDiv = document.querySelector(`.record-item[data-id='${id}']`);
            if (recordDiv) {
                recordDiv.remove();
            }
            updateSummary();
        }

        function updateSummary() {
            let records = JSON.parse(localStorage.getItem('records')) || [];
            const summary = {};

            records.forEach(record => {
                const { username, targetUser, type, amount } = record;
                if (type === '欠') {
                    if (!summary[username]) summary[username] = 0;
                    if (!summary[targetUser]) summary[targetUser] = 0;
                    summary[username] -= amount;
                    summary[targetUser] += amount;
                } else if (type === '還') {
                    if (!summary[username]) summary[username] = 0;
                    if (!summary[targetUser]) summary[targetUser] = 0;
                    summary[username] += amount;
                    summary[targetUser] -= amount;
                } else if (type === '先付') {
                    if (!summary[username]) summary[username] = 0;
                    summary[username] += amount; // 使用者支付金額為正數
                }
            });

            displaySummary(summary);
        }

        function displaySummary(summary) {
            const summaryDetails = document.getElementById('summaryDetails');
            summaryDetails.innerHTML = '';

            // Sort summary entries by amount descending
            const sortedSummary = Object.entries(summary).sort((a, b) => b[1] - a[1]);

            sortedSummary.forEach(([user, total]) => {
                if (total !== 0) {
                    const summaryText = document.createElement('div');
                    summaryText.textContent = `${user} 總額: ${total.toFixed(2)}元`;
                    summaryDetails.appendChild(summaryText);
                }
            });
        }

        function loadNotes() {
            const notes = JSON.parse(localStorage.getItem('notes')) || [];
            updateNoteSelect(notes);
        }

        function updateNoteSelect(notes) {
            const noteSelect = document.getElementById('noteSelect');
            noteSelect.innerHTML = '<option value="">選擇備註</option>';
            notes.forEach(note => {
                const option = document.createElement('option');
                option.value = note;
                option.textContent = note;
                noteSelect.appendChild(option);
            });
        }

        function loadUsers() {
            const users = JSON.parse(localStorage.getItem('users')) || [];
            updateUserSelect(users);
            updateTargetUserSelect(users);
        }

        function updateUserSelect(users) {
            const usernameSelect = document.getElementById('username');
            usernameSelect.innerHTML = '<option value="">選擇使用者名稱</option>';
            users.forEach(user => {
                const option = document.createElement('option');
                option.value = user;
                option.textContent = user;
                usernameSelect.appendChild(option);
            });
        }

        function updateTargetUserSelect(users) {
            const targetUserSelect = document.getElementById('targetUser');
            targetUserSelect.innerHTML = '<option value="">選擇對象使用者名稱</option>';
            users.forEach(user => {
                const option = document.createElement('option');
                option.value = user;
                option.textContent = user;
                targetUserSelect.appendChild(option);
            });
        }
    </script>
</body>
</html>
